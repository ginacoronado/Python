# -*- coding: utf-8 -*-
"""Python_4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cU-P2ld2IjUbNySW0a7SqkAt2aIwNEoc
"""

import pandas as pd
import numpy as np

df_estudiantes=pd.read_csv('/content/drive/MyDrive/Colab Notebooks/StudentsPerformance (1).csv')
df_estudiantes

#Operaciones entre columnas
#Lo primero que debmos hacer es elegir la columna que quiero operar, ojalauna columna numérica
df_estudiantes['reading score']

#Como sumar datos de una columna
df_estudiantes['reading score'].sum()

#Como contar datos de una columna
df_estudiantes['reading score'].count()

#Para calcular el promedio usamos el método mean
df_estudiantes['reading score'].mean()

#Para calcular la desviación estandar de una columna uso el metodo std
df_estudiantes['reading score'].std()

#para ver los valores máximos de una columna, uso el método max
df_estudiantes['reading score'].max()

#Para ver el valor minimo de una columna, uso el metodo min
df_estudiantes['reading score'].min()

#Para ver las medidas de tendencia central de una columna uso el método describe
df_estudiantes['reading score'].describe()

#Operaciones entre filas
df_estudiantes

#Operaciones entre filas, empecemos con la suma
df_estudiantes['math score']+df_estudiantes['writing score']+df_estudiantes['reading score']

#Asi guardo una nueva columna calculada
df_estudiantes['Total']=df_estudiantes['math score']+df_estudiantes['writing score']+df_estudiantes['reading score']
df_estudiantes

#Ahora vamos a calcular promedio de los datos de los estudiantes
(df_estudiantes['Total'])/3

#Vamosa guardar ahora la variable en una nueva columna
df_estudiantes['PROMEDIO']=(df_estudiantes['Total'])/3
df_estudiantes

#Así formateo los números para que tengan solo dos decimales
df_estudiantes.round(2)

#Ahora vamos a contar elementos por valor
len(df_estudiantes['gender'])

#Para contar cada uno uso el metodo value_counts
df_estudiantes['gender'].value_counts()

#Para contar la raza y grupos etnicos (en este caso)
df_estudiantes['race/ethnicity'].value_counts()

#Para calcular un porcentaje de participación por cada elemento
df_estudiantes['race/ethnicity'].value_counts(normalize=True)*100

#Agrupamos por parental level education
df_estudiantes['parental level of education'].value_counts()

#Tambien puedo calcular el % de participacion de ese item usando el value count
df_estudiantes['parental level of education'].value_counts(normalize=True)*100

#Calcule el % de participacion por genero
df_estudiantes['gender'].value_counts(normalize=True)*100

#Calculo con numero ejemplo con math score
df_estudiantes['math score'].value_counts()

#Ordenemos los datos por el valor de matematicas en ascendentes
df_estudiantes.sort_values('math score')

df_estudiantes=df_estudiantes.sort_values('math score')

df_estudiantes

#Importante para descargar un archivo
df_estudiantes.to_csv('Orden_Matematicas.csv', index=False)

#Ahora va,os a organizar de forma descendente
df_estudiantes.sort_values('math score', ascending=False)

#También podemos ordenar los dataframe no solo por una columna sino por dos
#Hay que tener en cuenta que organzara por el primer dato y el segundo será dependiente
df_estudiantes.sort_values(['reading score','writing score'], ascending=False)

#Guardar y descargar
df_estudiantes=df_estudiantes.sort_values(['reading score','writing score'], ascending=False)
df_estudiantes.to_csv('Orden_Lectura.csv', index=False)

#De esta manera puedo guardar los datos y cobreescribir sin reusar la variable con el metodo inplace
df_estudiantes.sort_values(['reading score','writing score'], ascending=False,
                           inplace=True)

df_estudiantes

#Organizar valores por texto, para eso se usa la función lampda, con ella convertimos primero los valores en minuscula y luego ordenamos
df_estudiantes.sort_values('race/ethnicity', ascending=True,
                           key=lambda col:col.str.lower())

